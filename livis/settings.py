"""
Django settings for livis project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import socket
import os
import uuid
uuid._uuid_generate_random = None


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print(BASE_DIR, 'base directory..')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&bcp2m66%6+r#@j5o!^2)6ax-k=k669i@b6-rd23l8f+#c7o7$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

DATA_UPLOAD_MAX_MEMORY_SIZE = 524288000


CORS_ORIGIN_ALLOW_ALL = True
# CORS_ORIGIN_WHITELIST = (
#       'http://127.0.0.1:4200',
#       'http://127.0.0.1',
#       'http://localhost:4200',
#       'http://13.234.202.181:4200'
# )

ENCRYPT_ID = '$pbkdf2-sha256$29000$6/3/XysF4JxT6j3H.J/Tug$uGi.a8mgaM1m5ze1mCTMNu0oljqOI78ha9TyMFtekbs'
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    # 'djcelery',
    # 'data',
    'accounts.apps.AccountsConfig',
    'parts.apps.PartsConfig',
    'shifts.apps.ShiftsConfig',
    'reports.apps.ReportsConfig',
    'capture.apps.CaptureConfig',
    'workstations.apps.WorkstationsConfig',
    # 'annotate.apps.AnnotateConfig',
    'plan.apps.PlanConfig',
    # 'toyoda.apps.ToyodaConfig',
    # 'training.apps.TrainingConfig',
    'logs.apps.LogsConfig',
    'assects.apps.AssectsConfig',
    # 'crm.apps.CrmConfig',
    'preprocess.apps.PreprocessConfig',
    'inspection.apps.InspectionConfig',
    'drf_yasg',
    'rest_framework',
    'rest_framework.authtoken',

]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', )
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

# CORS_ORIGIN_ALLOW_ALL = True # If this is used then `CORS_ORIGIN_WHITELIST` will not have any effect
CORS_ALLOW_CREDENTIALS = True
# CORS_ORIGIN_REGEX_WHITELIST = [
#    'http://localhost:3030','http://13.234.202.181:4200','http://127.0.0.1:4200','http://127.0.0.1','http://localhost:4200',
# ] # If this is used, then not need to use `CORS_ORIGIN_ALLOW_ALL = True`
# CORS_ORIGIN_REGEX_WHITELIST = [
#    'http://localhost:3030',
# ]

ROOT_URLCONF = 'livis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'livis.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'


# Setting key for Customised User Model
AUTH_USER_MODEL = 'accounts.User'


# Settings for Redis
REDIS_CLIENT_HOST = "localhost"
REDIS_CLIENT_PORT = 6379

# settings for AWS REDIS
REDIS_CLIENT_HOST_AWS = "13.235.133.102"
REDIS_CLIENT_PORT_AWS = 5051

CELERY_BROKER_URL = 'redis://localhost:6379'
BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Africa/Nairobi'
CELERYD_FORCE_EXECV = True


# TRAIN_DATA_STATIC = "/datadrive/image_data"
# EXPERIMENT_DATA_STATIC = '/root/experiments'
# print("AREEEEE: : : : :   " , TRAIN_DATA_STATIC)
# if not os.path.exists(TRAIN_DATA_STATIC):
#     os.makedirs(TRAIN_DATA_STATIC)

BASE_URL = 'http://127.0.0.1:8000'
# BASE_URL = '35.236.186.201'

# For Capture service
KAFKA_BROKER_URL = "13.127.161.4:9092"
# consumer_mount_path = "/Livis"
mongo_host = "mongodb"
mongo_port = 27017

# Setting key for Customised User Model
AUTH_USER_MODEL = 'accounts.User'

# Server Static IP Address
# SERVER_HOST = "192.168.198.150"
SERVER_HOST = "localhost"

DEV_MACHINE_HOST = "35.236.186.201"  # dev

DEV_MACHINE_MONGO_PORT = 26000  # mongo
DEV_MACHINE_REDIS_PORT = 6379

# Settings for MongoDB
MONGO_SERVER_HOST = SERVER_HOST
# MONGO_SERVER_HOST = DEV_MACHINE_HOST


MONGO_SERVER_PORT = 27017
# MONGO_SERVER_PORT = DEV_MACHINE_MONGO_PORT

# MONGO_DB = "LIVIS"
MONGO_DB = "TASL-RAP-HOLE-INSPECTION"
INSPECTION_DATA_COLLECTION = "inspection_summary"
MONGO_COLLECTION_PARTS = "parts"
MONGO_COLLECTIONS = {MONGO_COLLECTION_PARTS: "parts"}
WORKSTATION_COLLECTION = 'workstations'
PARTS_COLLECTION = 'parts'
SHIFT_COLLECTION = 'shift'
CONFIGURATION_COLLECTION = "configurations"
AIRCRAFT_NUMBER_COLLECTION = "aircraft_numbers"
AIRCRAFT_INSPECTIONS_COLLECTION = "aircraft_inspections"
INDIVIDUAL_INSPECTIONS_COLLECTION = "individual_inspections"
AIRCRAFT_INSPECTION_SUMMARY = "aircraft_inspection_summary"
INSPECTION_DATA_LOGS = 'inspections'

# PLAN_COLLECTION = 'plan'


# #Settings for Redis
REDIS_CLIENT_HOST = "localhost"
# REDIS_CLIENT_HOST = DEV_MACHINE_HOST
REDIS_CLIENT_PORT = 6379

# List of Avalaible ports for Tensprbaords
TF_PORTS = [4200, 3306, 4400, 3000, 9092, 2181, 37685, 33253]

# IP_ADDRESS= "192.168.164.73" #schneider

# IP_ADDRESS= "10.219.188.42"# digital team original mes later - static ip lan connection
# IP_ADDRESS= "192.168.1.248"# digital team se connected sesa device -> gobro router
# IP_ADDRESS= "192.168.1.249"# digital team data capture device -> gobro router

# IP_ADDRESS= "192.168.0.120"# office
# IP_ADDRESS= "192.168.1.6"# office

# IP_ADDRESS="192.168.32.140" #office
# IP_ADDRESS= "192.168.1.3"# home
# IP_ADDRESS="10.0.7.114"
# h_name = socket.gethostname()
# IP_ADDRESS = socket.gethostbyname(h_name)
# print("IP_ADDRESS1",IP_ADDRESS)
# print("IP_ADDRESS",IP_ADDRESS)


# IP_ADDRESS="192.168.1.10"
# IP_ADDRESS="10.0.8.50"#tassl
IP_ADDRESS = "192.168.32.225"

# IP_ADDRESS="192.168.50.21"

# IP_ADDRESS= "192.168.0.108"# pg
# IP_ADDRESS = "192.168.0.105" #pg

# Limit the credentials
operator_limit = 6
admin_limit = 3
print("IP_ADDRESS", IP_ADDRESS)

# IP_ADDRESS= "192.168.10.45" #server TBAL

IMAGE_STORAGE = "/home/rajnish/Videos/livis-be-TASL_raphole/datadrive/images/"

EXPORT_DIRECTORY = "/home/rajnish/Videos/livis-be-TASL_raphole/datadrive/export/"  # Personal
# EXPORT_DIRECTORY = "/home/tbal/Desktop/reports/"

datadrive_path = '/home/rajnish/Videos/livis-be-TASL_raphole/datadrive/'
